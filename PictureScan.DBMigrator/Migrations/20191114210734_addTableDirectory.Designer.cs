// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PictureScan.Models;

namespace PictureScan.DBMigrator.Migrations
{
    [DbContext(typeof(PSContext))]
    [Migration("20191114210734_addTableDirectory")]
    partial class addTableDirectory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PictureScan.Models.DBModels.Directory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileDirectory")
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directory");
                });

            modelBuilder.Entity("PictureScan.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CenterBottom")
                        .HasColumnType("bigint");

                    b.Property<long>("CenterCenter")
                        .HasColumnType("bigint");

                    b.Property<long>("CenterTop")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationFileDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectoryId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(26)");

                    b.Property<long>("LeftBottom")
                        .HasColumnType("bigint");

                    b.Property<long>("LeftCenter")
                        .HasColumnType("bigint");

                    b.Property<long>("LeftTop")
                        .HasColumnType("bigint");

                    b.Property<long>("RightBottom")
                        .HasColumnType("bigint");

                    b.Property<long>("RightCenter")
                        .HasColumnType("bigint");

                    b.Property<long>("RightTop")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DirectoryId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("PictureScan.Models.Picture", b =>
                {
                    b.HasOne("PictureScan.Models.DBModels.Directory", "Directory")
                        .WithMany("Pictures")
                        .HasForeignKey("DirectoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
